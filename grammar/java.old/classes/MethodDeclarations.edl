%%%
 %% Section 8.4: Method Declarations
 %%
 %% @author  Martin Bravenboer <martin.bravenboer@gmail.com>
 %%%
module java/classes/MethodDeclarations
imports
  java/lexical/Identifiers
  java/lexical/Modifiers
  java/types/Main
  java/classes/FieldDeclarations
  java/interfaces/Annotations
  java/statements/Blocks
  
global actions
  pattern _(8..9) -> MethodDecHead
    #$ = Method();
	 $.name = lexem($3);
	 name2Member.declare($, $);
	#

exports
  sorts
    MethodDec
    MethodDecHead
    ResultType

  context-free syntax
    rule MethodDecHead MethodBody -> MethodDec

    rule #$mods = set();# (Anno | (MethodMod #$mods.add($0);#))* TypeParams?
	 ResultType Id "(" {FormalParam ","}* ")" Throws? -> MethodDecHead #$.modifiers = $mods;#

    rule Type   -> ResultType
    rule "void" -> ResultType

  sorts FormalParam
  context-free syntax
    rule (Anno | VarMod)* Type       VarDecId -> FormalParam
    rule (Anno | VarMod)* Type "..." VarDecId -> FormalParam

  sorts VarMod
  context-free syntax
    rule Final -> VarMod

  sorts MethodMod
  context-free syntax
    rule Public         -> MethodMod #$=Modifiers.PUBLIC;#
    rule Protected      -> MethodMod #$=Modifiers.PROTECTED;#
    rule Private        -> MethodMod #$=Modifiers.PRIVATE;#

    rule Abstract       -> MethodMod #$=Modifiers.PRIVATE;#
    rule Static         -> MethodMod #$=Modifiers.STATIC;#
    rule Final          -> MethodMod #$=Modifiers.FINAL;#
    rule Synchronized   -> MethodMod #$=Modifiers.SYNCHRONIZED;#
    rule Native         -> MethodMod #$=Modifiers.NATIVE;#
    rule StrictFP       -> MethodMod #$=Modifiers.STRICTFP;#

  %%%
   %% Section 8.4.6: Method Throws
   %%%
  sorts
    Throws
    ExceptionType

  context-free syntax
    rule "throws" {ExceptionType ","}+ -> Throws
    rule ClassType -> ExceptionType
    %% TypeVar -> ExceptionType

  %%%
   %% Section 8.4.7: Method Body
   %%% 
  sorts MethodBody
  context-free syntax
    rule Block -> MethodBody
    rule ";"   -> MethodBody

