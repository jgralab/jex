%%%
 %% Section 4.3: Reference Types and Values
 %%
 %% @author Martin Bravenboer <martin.bravenboer@gmail.com>
 %%%
module java/types/ReferenceTypes
imports
  java/lexical/Identifiers
  java/names/Main
  java/types/Main  
  java/types/ParameterizedTypes
  java/types/TypeVariables


exports
  sorts
    RefType
    ClassOrInterfaceType
    ClassType
    InterfaceType
    TypeDecSpec
    ArrayType
    TypeVar

  context-free syntax
    rule ClassOrInterfaceType -> RefType
    rule ArrayType            -> RefType
    
    %% This production rule is highly ambiguous, since every
    %% TypeVar can be a ClassOrInterfaceType. A later disambiguation
    %% phase has to find out if a ClassOrInterfaceType is in fact
    %% a TypeVar.
    
    %% TypeVar -> RefType {avoid}

  context-free syntax
  
    %% ClassType and InterfaceType are ambiguous. We modify the
    %% production of ClassOrInterfaceType to make this ambiguity explicit.
    
    rule TypeDecSpec TypeArgs? -> ClassOrInterfaceType {cons("ClassOrInterfaceType")}
    rule TypeDecSpec TypeArgs? -> ClassType {cons("ClassType")}
    rule TypeDecSpec TypeArgs? -> InterfaceType {cons("InterfaceType")}

    rule TypeName -> TypeDecSpec
    rule TypeDecSpec TypeArgs "." Id -> TypeDecSpec {cons("Member")}
    
  context-free syntax    
    rule TypeVarId -> TypeVar {cons("TypeVar")}

  context-free syntax
    rule Type "[" "]" -> ArrayType  {cons("ArrayType")}
