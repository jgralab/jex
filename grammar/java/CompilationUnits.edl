module java/CompilationUnits

imports
  java/ClassifierDeclarations   %% ClassifierDeclaration
  java/Annotations              %% Annotation
  java/Packages                 %% PackageName
  java/Types                    %% PlainClassifierType

import declarations
	de.uni_koblenz.jgralab.TemporaryVertex;

exports
  sorts
    CompilationUnit

  context-free syntax

    @Symboltable{importedPackages, importedClassifiers}
    rule #$ = SourceFile();
          $.path = file();
          $packageDecl = {return defaultPackage;};
          {curQName = "";}#

         (#{isPackageDeclaration = true;}#
          PackageDeclaration
          #{isPackageDeclaration = false;}
           $packageDecl = $0;
           {curQName = #$0.qualifiedName#.toString();
            curPkgQName = curQName;}#)?

          (ImportDeclaration
           #{if (#$0# != null) { // There's no $0 for static imports
              #Imports($, $0);#
            }};#
           )*

          (ClassifierDeclaration #Defines($,$0);
                                  ContainsClassifier($packageDecl, $0);#)*
         -> CompilationUnit #$.lines = {return currentElement.getLastLine();};#

    %% PackageDeclaration
    rule Annotation* "package" PackageName ";"
         -> PackageDeclaration
            #$=name2Package.use(lexem($2).replaceAll("\\s+", ""));#

    %% ImportDeclaration
    rule "import" PlainClassifierType ";"
         -> ImportDeclaration
         #$ = $1;
          importedClassifiers.declare($.name, $);#
    rule "import" PackageName       "." "*" ";"  -> ImportDeclaration
      #$ = name2Package.useOrDeclare($1);
       $.qualifiedName = $1;
       importedPackages.declare($1, $);#
    rule "import" "static" PlainClassifierType "." Id  ";"  -> ImportDeclaration
    rule "import" "static" PlainClassifierType "." "*" ";"  -> ImportDeclaration
