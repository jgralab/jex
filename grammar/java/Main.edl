module java/Main
schema de.uni_koblenz.simple_java.schema.JavaSchema
imports
  java/lexical/Main
  java/types/Main
  java/names/Main
  java/packages/Main
  java/classes/Main
  java/interfaces/Main
  java/arrays/Main
  java/statements/Main
  java/expressions/Main
symbol tables
	name2Package<Package>
	name2NamedElement<NamedElement>
	name2Member<Member<--Declares>:Type
default values
	Imports.lineNo = line(omega);
	Defines.lineNo = line(omega);
import declarations
	java.util.List;
	de.uni_koblenz.jgralab.TemporaryVertex;
	de.uni_koblenz.edl.parser.Position;
user code{
	private Vertex defaultPackage;
	
	{
		defaultPackage = createVertex("Package", new Position());
		defaultPackage.setAttribute("name","");
		defaultPackage.setAttribute("qualifiedName","");
	}
	
	private boolean isPackageDeclaration = false;
	
	private String packagePrefix;
	
	private int statements = 0;

	@SuppressWarnings("unchecked")
	public void blessAllTemporaryVerticesToTypes(){
		List<TemporaryVertex> tempVertices = (List<TemporaryVertex>) #name2NamedElement.getTemporaryVertices()#;
		for (TemporaryVertex tempVert: tempVertices) {
			tempVert.bless(getVertexClass("Class"));
		}
		List<TemporaryVertex> tempPackages = (List<TemporaryVertex>) #name2Package.getTemporaryVertices()#;
		for (TemporaryVertex tempPackage: tempPackages) {
			tempPackage.bless(getVertexClass("Package"));
		}
		for (Vertex tmp : getGraph().vertices(graph.getGraphClass()
					    .getTemporaryVertexClass())) {
		    System.out.println("Left over TemporaryVertex: " + tmp);
		}
	}
}
exports
  context-free start-symbols CompilationUnit #{blessAllTemporaryVerticesToTypes();}#
